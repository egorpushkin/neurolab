# SlickEdit generated file.  Do not edit this file except in designated areas.
# -----Begin user-editable area-----

# -----End user-editable area-----

# Make command to use for dependencies
MAKE=gmake

# If no configuration is specified, "Debug" will be used
ifndef "CFG"
CFG=Debug
endif

#
# Configuration: Debug
#
ifeq "$(CFG)" "Debug"
OUTDIR=Debug
OUTFILE=../../../Bin/linux_gcc/$(OUTDIR)/StorageProcessor.so
CFG_INC=-I../../../Include/ -I../../../Src/SDKDlls/ -I/usr/include/libxml2/
CFG_LIB=../../../Lib/linux_gcc/Debug/DataProcessing_Lib.a \
	../../../Lib/linux_gcc/Debug/Components_Lib.a -L/usr/lib -lxml2 \
	-lz -lm 
CFG_OBJ=
COMMON_OBJ=$(OUTDIR)/CommonFactory.o $(OUTDIR)/CoreEntries.o \
	$(OUTDIR)/FileNameTools.o $(OUTDIR)/LoadElement.o \
	$(OUTDIR)/PrepareDataFileName.o $(OUTDIR)/SerializeConfig.o \
	$(OUTDIR)/SerializeDataFactory.o $(OUTDIR)/SerializeDocument.o \
	$(OUTDIR)/SerializeLayer.o $(OUTDIR)/StorageProcessor.o \
	$(OUTDIR)/StoreElement.o $(OUTDIR)/XMLConfig.o \
	$(OUTDIR)/XMLSerializer.o 
OBJ=$(COMMON_OBJ) $(CFG_OBJ)
ALL_OBJ=$(OUTDIR)/CommonFactory.o $(OUTDIR)/CoreEntries.o \
	$(OUTDIR)/FileNameTools.o $(OUTDIR)/LoadElement.o \
	$(OUTDIR)/PrepareDataFileName.o $(OUTDIR)/SerializeConfig.o \
	$(OUTDIR)/SerializeDataFactory.o $(OUTDIR)/SerializeDocument.o \
	$(OUTDIR)/SerializeLayer.o $(OUTDIR)/StorageProcessor.o \
	$(OUTDIR)/StoreElement.o $(OUTDIR)/XMLConfig.o \
	$(OUTDIR)/XMLSerializer.o \
	../../../Lib/linux_gcc/Debug/DataProcessing_Lib.a \
	../../../Lib/linux_gcc/Debug/Components_Lib.a -L/usr/lib -lxml2 \
	-lz -lm 

COMPILE=g++ -c   -g -fPIC -o "$(OUTDIR)/$(*F).o" $(CFG_INC) "$<"
LINK=g++  -g -shared -fPIC -o "$(OUTFILE)" $(ALL_OBJ)

# Pattern rules
$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/StorageProcessor/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalSerializers/Tools/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/Environment/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalSerializers/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalConfigs/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalConfigs/XMLSerializationTools/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalSerializers/XMLSerializationTools/%.cpp
	$(COMPILE)

# Build rules
all: $(OUTFILE)

$(OUTFILE): $(OUTDIR)  $(OBJ)
	$(LINK)

$(OUTDIR):
	mkdir -p "$(OUTDIR)"

# Rebuild this project
rebuild: cleanall all

# Clean this project
clean:
	rm -f $(OUTFILE)
	rm -f $(OBJ)

# Clean this project and all dependencies
cleanall: clean
endif

#
# Configuration: Release
#
ifeq "$(CFG)" "Release"
OUTDIR=Release
OUTFILE=../../../Bin/linux_gcc/$(OUTDIR)/StorageProcessor.so
CFG_INC=-I../../../Include/ -I../../../Src/SDKDlls/ -I/usr/include/libxml2/
CFG_LIB=../../../Lib/linux_gcc/Release/DataProcessing_Lib.a \
	../../../Lib/linux_gcc/Release/Components_Lib.a -L/usr/lib \
	-lxml2 -lz -lm 
CFG_OBJ=
COMMON_OBJ=$(OUTDIR)/CommonFactory.o $(OUTDIR)/CoreEntries.o \
	$(OUTDIR)/FileNameTools.o $(OUTDIR)/LoadElement.o \
	$(OUTDIR)/PrepareDataFileName.o $(OUTDIR)/SerializeConfig.o \
	$(OUTDIR)/SerializeDataFactory.o $(OUTDIR)/SerializeDocument.o \
	$(OUTDIR)/SerializeLayer.o $(OUTDIR)/StorageProcessor.o \
	$(OUTDIR)/StoreElement.o $(OUTDIR)/XMLConfig.o \
	$(OUTDIR)/XMLSerializer.o 
OBJ=$(COMMON_OBJ) $(CFG_OBJ)
ALL_OBJ=$(OUTDIR)/CommonFactory.o $(OUTDIR)/CoreEntries.o \
	$(OUTDIR)/FileNameTools.o $(OUTDIR)/LoadElement.o \
	$(OUTDIR)/PrepareDataFileName.o $(OUTDIR)/SerializeConfig.o \
	$(OUTDIR)/SerializeDataFactory.o $(OUTDIR)/SerializeDocument.o \
	$(OUTDIR)/SerializeLayer.o $(OUTDIR)/StorageProcessor.o \
	$(OUTDIR)/StoreElement.o $(OUTDIR)/XMLConfig.o \
	$(OUTDIR)/XMLSerializer.o \
	../../../Lib/linux_gcc/Release/DataProcessing_Lib.a \
	../../../Lib/linux_gcc/Release/Components_Lib.a -L/usr/lib \
	-lxml2 -lz -lm 

COMPILE=g++ -c   -fPIC -o "$(OUTDIR)/$(*F).o" $(CFG_INC) "$<"
LINK=g++  -shared -fPIC -o "$(OUTFILE)" $(ALL_OBJ)

# Pattern rules
$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/StorageProcessor/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalSerializers/Tools/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/Environment/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalSerializers/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalConfigs/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalConfigs/XMLSerializationTools/%.cpp
	$(COMPILE)

$(OUTDIR)/%.o : ../../../Src/Projects/IndependentNNPTools/StorageProcessor/ExternalSerializers/XMLSerializationTools/%.cpp
	$(COMPILE)

# Build rules
all: $(OUTFILE)

$(OUTFILE): $(OUTDIR)  $(OBJ)
	$(LINK)

$(OUTDIR):
	mkdir -p "$(OUTDIR)"

# Rebuild this project
rebuild: cleanall all

# Clean this project
clean:
	rm -f $(OUTFILE)
	rm -f $(OBJ)

# Clean this project and all dependencies
cleanall: clean
endif
